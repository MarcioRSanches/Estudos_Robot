<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.2 on win32)" generated="20200517 17:36:39.922" rpa="false">
<suite id="s1" name="Database" source="C:\Estudos\RobotFramework\Estudos_Robot\Robot_Avançado\database.robot">
<test id="s1-t1" name="Exemplo 03: Select Statement">
<kw name="Conectar no Banco de Dados" type="setup">
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<arguments>
<arg>dbapiModuleName=psycopg2</arg>
<arg>dbName=robot</arg>
<arg>dbUsername=postgres</arg>
<arg>dbPassword=postgres</arg>
<arg>dbHost=localhost</arg>
<arg>dbPort=5432</arg>
</arguments>
<msg timestamp="20200517 17:36:39.974" level="INFO">Connecting using : psycopg2.connect(database=robot, user=postgres, password=postgres, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20200517 17:36:39.958" endtime="20200517 17:36:40.014"></status>
</kw>
<status status="PASS" starttime="20200517 17:36:39.958" endtime="20200517 17:36:40.014"></status>
</kw>
<kw name="Executar query no Banco de dados">
<arguments>
<arg>SELECT * from account</arg>
</arguments>
<assign>
<var>${RESPOSTA_SELECT}</var>
</assign>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>selectStatement=${QUERY}</arg>
</arguments>
<assign>
<var>${RESPONSE_QUERY}</var>
</assign>
<msg timestamp="20200517 17:36:40.014" level="INFO">Executing : Query  |  SELECT * from account </msg>
<msg timestamp="20200517 17:36:40.018" level="INFO">${RESPONSE_QUERY} = [(2, 'Luiz Silva', 'robot987', 'robotizando2@robot.com')]</msg>
<status status="PASS" starttime="20200517 17:36:40.014" endtime="20200517 17:36:40.018"></status>
</kw>
<msg timestamp="20200517 17:36:40.018" level="INFO">${RESPOSTA_SELECT} = [(2, 'Luiz Silva', 'robot987', 'robotizando2@robot.com')]</msg>
<status status="PASS" starttime="20200517 17:36:40.014" endtime="20200517 17:36:40.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESPOSTA_SELECT}</arg>
</arguments>
<msg timestamp="20200517 17:36:40.018" level="INFO">[(2, 'Luiz Silva', 'robot987', 'robotizando2@robot.com')]</msg>
<status status="PASS" starttime="20200517 17:36:40.018" endtime="20200517 17:36:40.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Usuário ${RESPOSTA_SELECT[0][0]} - Nome: ${RESPOSTA_SELECT[0][1]} - E-mail: ${RESPOSTA_SELECT[0][3]}</arg>
</arguments>
<msg timestamp="20200517 17:36:40.018" level="INFO">Usuário 2 - Nome: Luiz Silva - E-mail: robotizando2@robot.com</msg>
<status status="PASS" starttime="20200517 17:36:40.018" endtime="20200517 17:36:40.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Usuário ${RESPOSTA_SELECT[1][0]} - Nome: ${RESPOSTA_SELECT[1][1]} - E-mail: ${RESPOSTA_SELECT[1][3]}</arg>
</arguments>
<msg timestamp="20200517 17:36:40.022" level="FAIL">Resolving variable '${RESPOSTA_SELECT[1][0]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20200517 17:36:40.022" endtime="20200517 17:36:40.022"></status>
</kw>
<kw name="Desconectar do Banco de Dados" type="teardown">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20200517 17:36:40.022" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20200517 17:36:40.022" endtime="20200517 17:36:40.022"></status>
</kw>
<status status="PASS" starttime="20200517 17:36:40.022" endtime="20200517 17:36:40.022"></status>
</kw>
<status status="FAIL" starttime="20200517 17:36:39.958" endtime="20200517 17:36:40.022" critical="yes">Resolving variable '${RESPOSTA_SELECT[1][0]}' failed: IndexError: list index out of range</status>
</test>
<doc>[14/10/2019] https://franz-see.github.io/Robotframework-Database-Library/api/1.2.2/DatabaseLibrary.html
Instale: "pip install -U robotframework-databaselibrary"
Para acessar o BD o Robot precisa conhecer o DRIVER de cada banco, então precisamos instalar esse DRIVER também (instale apenas para o BD que você utiliza!) ...
Para PostgreSQL: "pip install psycopg2"
Para SQLite 3: não precisa instalar nada!
Para MySQL: "pip install pymysql"
Para SQL Server: "pip install pymssql"
Para Oracle: "pip install cx-Oracle"</doc>
<status status="FAIL" starttime="20200517 17:36:39.926" endtime="20200517 17:36:40.022"></status>
</suite>
<statistics>
<total>
<stat pass="0" fail="1">Critical Tests</stat>
<stat pass="0" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" id="s1" name="Database">Database</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
